"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy";
exports.ids = ["vendor-chunks/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/lib/index.js":
/*!*************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/lib/index.js ***!
  \*************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _createClass = function() {\n    function defineProperties(target, props) {\n        for(var i = 0; i < props.length; i++){\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function(Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _react = __webpack_require__(/*! react */ \"(ssr)/../../../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _react2 = _interopRequireDefault(_react);\nvar _CSSTransition = __webpack_require__(/*! react-transition-group/CSSTransition */ \"(ssr)/./node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/CSSTransition.js\");\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar ModalVideo = function(_React$Component) {\n    _inherits(ModalVideo, _React$Component);\n    function ModalVideo(props) {\n        _classCallCheck(this, ModalVideo);\n        var _this = _possibleConstructorReturn(this, (ModalVideo.__proto__ || Object.getPrototypeOf(ModalVideo)).call(this, props));\n        _this.state = {\n            isOpen: false,\n            modalVideoWidth: \"100%\"\n        };\n        _this.closeModal = _this.closeModal.bind(_this);\n        _this.updateFocus = _this.updateFocus.bind(_this);\n        _this.timeout; // used for resizing video.\n        return _this;\n    }\n    _createClass(ModalVideo, [\n        {\n            key: \"openModal\",\n            value: function openModal() {\n                this.setState({\n                    isOpen: true\n                });\n            }\n        },\n        {\n            key: \"closeModal\",\n            value: function closeModal() {\n                this.setState({\n                    isOpen: false\n                });\n                if (typeof this.props.onClose === \"function\") {\n                    this.props.onClose();\n                }\n            }\n        },\n        {\n            key: \"keydownHandler\",\n            value: function keydownHandler(e) {\n                if (e.keyCode === 27) {\n                    this.closeModal();\n                }\n            }\n        },\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                document.addEventListener(\"keydown\", this.keydownHandler.bind(this));\n                window.addEventListener(\"resize\", this.resizeModalVideoWhenHeightGreaterThanWindowHeight.bind(this));\n                this.setState({\n                    modalVideoWidth: this.getWidthFulfillAspectRatio(this.props.ratio, window.innerHeight, window.innerWidth)\n                });\n            }\n        },\n        {\n            key: \"componentWillUnmount\",\n            value: function componentWillUnmount() {\n                document.removeEventListener(\"keydown\", this.keydownHandler.bind(this));\n                window.removeEventListener(\"resize\", this.resizeModalVideoWhenHeightGreaterThanWindowHeight.bind(this));\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate() {\n                if (this.state.isOpen && this.modal) {\n                    this.modal.focus();\n                }\n            }\n        },\n        {\n            key: \"updateFocus\",\n            value: function updateFocus(e) {\n                if (e.keyCode === 9) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.modal === document.activeElement) {\n                        this.modalbtn.focus();\n                    } else {\n                        this.modal.focus();\n                    }\n                }\n            }\n        },\n        {\n            key: \"resizeModalVideoWhenHeightGreaterThanWindowHeight\",\n            value: function resizeModalVideoWhenHeightGreaterThanWindowHeight() {\n                var _this2 = this;\n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(function() {\n                    var width = _this2.getWidthFulfillAspectRatio(_this2.props.ratio, window.innerHeight, window.innerWidth);\n                    if (_this2.state.modalVideoWidth != width) {\n                        _this2.setState({\n                            modalVideoWidth: width\n                        });\n                    }\n                }, 10);\n            }\n        },\n        {\n            key: \"getQueryString\",\n            value: function getQueryString(obj) {\n                var url = \"\";\n                for(var key in obj){\n                    if (obj.hasOwnProperty(key)) {\n                        if (obj[key] !== null) {\n                            url += key + \"=\" + obj[key] + \"&\";\n                        }\n                    }\n                }\n                return url.substr(0, url.length - 1);\n            }\n        },\n        {\n            key: \"getYoutubeUrl\",\n            value: function getYoutubeUrl(youtube, videoId) {\n                var query = this.getQueryString(youtube);\n                return \"//www.youtube.com/embed/\" + videoId + \"?\" + query;\n            }\n        },\n        {\n            key: \"getVimeoUrl\",\n            value: function getVimeoUrl(vimeo, videoId) {\n                var query = this.getQueryString(vimeo);\n                return \"//player.vimeo.com/video/\" + videoId + \"?\" + query;\n            }\n        },\n        {\n            key: \"getYoukuUrl\",\n            value: function getYoukuUrl(youku, videoId) {\n                var query = this.getQueryString(youku);\n                return \"//player.youku.com/embed/\" + videoId + \"?\" + query;\n            }\n        },\n        {\n            key: \"getVideoUrl\",\n            value: function getVideoUrl(opt, videoId) {\n                if (opt.channel === \"youtube\") {\n                    return this.getYoutubeUrl(opt.youtube, videoId);\n                } else if (opt.channel === \"vimeo\") {\n                    return this.getVimeoUrl(opt.vimeo, videoId);\n                } else if (opt.channel === \"youku\") {\n                    return this.getYoukuUrl(opt.youku, videoId);\n                } else if (opt.channel === \"custom\") {\n                    return opt.url;\n                }\n            }\n        },\n        {\n            key: \"getPadding\",\n            value: function getPadding(ratio) {\n                var arr = ratio.split(\":\");\n                var width = Number(arr[0]);\n                var height = Number(arr[1]);\n                var padding = height * 100 / width;\n                return padding + \"%\";\n            }\n        },\n        {\n            key: \"getWidthFulfillAspectRatio\",\n            value: function getWidthFulfillAspectRatio(ratio, maxHeight, maxWidth) {\n                var arr = ratio.split(\":\");\n                var width = Number(arr[0]);\n                var height = Number(arr[1]);\n                // Height that fulfill the aspect ratio for maxWidth.\n                var videoHeight = maxWidth * (height / width);\n                if (maxHeight < videoHeight) {\n                    // when the height of the video is greater than the height of the window.\n                    // calculate the width that fulfill the aspect ratio for the height of the window.\n                    // ex: 16:9 aspect ratio\n                    // 16:9 = width : height\n                    // → width = 16 / 9 * height\n                    return Math.floor(width / height * maxHeight);\n                }\n                return \"100%\";\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this3 = this;\n                var modalVideoInnerStyle = {\n                    width: this.state.modalVideoWidth\n                };\n                var modalVideoIframeWrapStyle = {\n                    paddingBottom: this.getPadding(this.props.ratio)\n                };\n                return _react2.default.createElement(_CSSTransition2.default, {\n                    classNames: this.props.classNames.modalVideoEffect,\n                    timeout: this.props.animationSpeed\n                }, function() {\n                    if (!_this3.state.isOpen) {\n                        return null;\n                    }\n                    return _react2.default.createElement(\"div\", {\n                        className: _this3.props.classNames.modalVideo,\n                        tabIndex: \"-1\",\n                        role: \"dialog\",\n                        \"aria-label\": _this3.props.aria.openMessage,\n                        onClick: _this3.closeModal,\n                        ref: function ref(node) {\n                            _this3.modal = node;\n                        },\n                        onKeyDown: _this3.updateFocus\n                    }, _react2.default.createElement(\"div\", {\n                        className: _this3.props.classNames.modalVideoBody\n                    }, _react2.default.createElement(\"div\", {\n                        className: _this3.props.classNames.modalVideoInner,\n                        style: modalVideoInnerStyle\n                    }, _react2.default.createElement(\"div\", {\n                        className: _this3.props.classNames.modalVideoIframeWrap,\n                        style: modalVideoIframeWrapStyle\n                    }, _react2.default.createElement(\"button\", {\n                        className: _this3.props.classNames.modalVideoCloseBtn,\n                        \"aria-label\": _this3.props.aria.dismissBtnMessage,\n                        ref: function ref(node) {\n                            _this3.modalbtn = node;\n                        },\n                        onKeyDown: _this3.updateFocus\n                    }), _this3.props.children || _react2.default.createElement(\"iframe\", {\n                        width: \"460\",\n                        height: \"230\",\n                        src: _this3.getVideoUrl(_this3.props, _this3.props.videoId),\n                        frameBorder: \"0\",\n                        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n                        allowFullScreen: _this3.props.allowFullScreen,\n                        tabIndex: \"-1\"\n                    })))));\n                });\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromProps\",\n            value: function getDerivedStateFromProps(props) {\n                return {\n                    isOpen: props.isOpen\n                };\n            }\n        }\n    ]);\n    return ModalVideo;\n}(_react2.default.Component);\nexports[\"default\"] = ModalVideo;\nModalVideo.defaultProps = {\n    channel: \"youtube\",\n    isOpen: false,\n    youtube: {\n        autoplay: 1,\n        cc_load_policy: 1,\n        color: null,\n        controls: 1,\n        disablekb: 0,\n        enablejsapi: 0,\n        end: null,\n        fs: 1,\n        h1: null,\n        iv_load_policy: 1,\n        list: null,\n        listType: null,\n        loop: 0,\n        modestbranding: null,\n        origin: null,\n        playlist: null,\n        playsinline: null,\n        rel: 0,\n        showinfo: 1,\n        start: 0,\n        wmode: \"transparent\",\n        theme: \"dark\",\n        mute: 0\n    },\n    ratio: \"16:9\",\n    vimeo: {\n        api: false,\n        autopause: true,\n        autoplay: true,\n        byline: true,\n        callback: null,\n        color: null,\n        height: null,\n        loop: false,\n        maxheight: null,\n        maxwidth: null,\n        player_id: null,\n        portrait: true,\n        title: true,\n        width: null,\n        xhtml: false\n    },\n    youku: {\n        autoplay: 1,\n        show_related: 0\n    },\n    allowFullScreen: true,\n    animationSpeed: 300,\n    classNames: {\n        modalVideoEffect: \"modal-video-effect\",\n        modalVideo: \"modal-video\",\n        modalVideoClose: \"modal-video-close\",\n        modalVideoBody: \"modal-video-body\",\n        modalVideoInner: \"modal-video-inner\",\n        modalVideoIframeWrap: \"modal-video-movie-wrap\",\n        modalVideoCloseBtn: \"modal-video-close-btn\"\n    },\n    aria: {\n        openMessage: \"You just opened the modal video\",\n        dismissBtnMessage: \"Close the modal by clicking here\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/css/modal-video.css":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/css/modal-video.css ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"ad3e3762d2ec\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3QtbW9kYWwtdmlkZW9AMi4wLjBfQGJhYmVsK2NvcmVANy4yMS40X2VzbGludC1wbHVnaW4tanN4LWExMXlANi43LjFfZXNsaW50LXBsdWdpbi1yZWFjdC1oX2twc2VhYmVub2N6c3Vvd2k0anFtajVrbGl5L25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC12aWRlby9jc3MvbW9kYWwtdmlkZW8uY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcnR1cC1uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVhY3QtbW9kYWwtdmlkZW9AMi4wLjBfQGJhYmVsK2NvcmVANy4yMS40X2VzbGludC1wbHVnaW4tanN4LWExMXlANi43LjFfZXNsaW50LXBsdWdpbi1yZWFjdC1oX2twc2VhYmVub2N6c3Vvd2k0anFtajVrbGl5L25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC12aWRlby9jc3MvbW9kYWwtdmlkZW8uY3NzP2QzOTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJhZDNlMzc2MmQyZWNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/react-modal-video@2.0.0_@babel+core@7.21.4_eslint-plugin-jsx-a11y@6.7.1_eslint-plugin-react-h_kpseabenoczsuowi4jqmj5kliy/node_modules/react-modal-video/css/modal-video.css\n");

/***/ })

};
;